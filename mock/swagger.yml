openapi: 3.0.0
info:
  description: Mock API for Media Database example
  version: 1.0.0
  title: Mock API
  contact:
    email: ondrej@sevcik.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: /api/v1
tags:
  - name: media
    description: Medias data related api.
paths:
  /media:
    get:
      tags:
        - media
      summary: Get Media List
      description: Return a list of media.
      operationId: getMedias
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int32
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Media'
    post:
      tags:
        - media
      summary: Create New Media
      description: Create a new article.
      operationId: createMedia
      security:
        - AccessTokenAuth: []
      parameters:
        - name: article
          in: query
          required: true
          description: The data for new article.
          schema:
            $ref: '#/components/schemas/Media'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      article:
                        $ref: '#/components/schemas/Media'
        401:
          $ref: '#/components/responses/Unauthorized'
  /media/{guid}:
    get:
      tags:
        - media
      summary: Get Media Detail
      description: Get article detail by ID.
      operationId: getMedia
      security:
        - AccessTokenAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Media id.
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      article:
                        $ref: '#/components/schemas/Media'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - media
      summary: Update Media Detail
      description: Update article deatail by ID.
      operationId: updateMedia
      security:
        - AccessTokenAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Media id.
          schema:
            type: integer
            format: int64
        - name: article
          in: query
          required: true
          description: data for the updated article.
          schema:
            $ref: '#/components/schemas/Media'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      article:
                        $ref: '#/components/schemas/Media'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - media
      summary: Delete Media
      description: Delete article by ID.
      operationId: deleteMedia
      security:
        - AccessTokenAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Media id.
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

    post:
      tags:
        - users
      summary: Get current user info
      description: This can only be done by the logged in user.
      operationId: getUserInfo
      security:
        - AccessTokenAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/Unauthorized'
